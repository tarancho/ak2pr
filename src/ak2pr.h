/* -*- mode: c++; coding: sjis-dos;-*-
 * Time-stamp: <2001-12-08 01:05:10 tfuruka1>
 *
 * 「ak2psのようなもの」の共通ヘッダファイル(クライアント用)
 *
 * $Id: ak2pr.h,v 1.5 2001/12/07 18:23:31 tfuruka1 Exp $
 * $Log: ak2pr.h,v $
 * Revision 1.5  2001/12/07 18:23:31  tfuruka1
 * 用紙サイズの指定を出来るようにした。
 *
 * Revision 1.4  2001/10/01 13:22:28  tfuruka1
 * 用紙の向きを指定出来るように修正（関数の引数の追加）。
 *
 * Revision 1.3  2001/08/19 04:41:03  tfuruka1
 * PostScriptファイルの暫定対応（ただ単にDistillerの監視フォルダに放り込
 * むだけ）。
 *
 * Revision 1.2  2001/08/18 16:48:20  tfuruka1
 * ●SendPrintFromFile関数の廃止に伴いプロトタイプ宣言を削除。
 *
 * Revision 1.1  2001/02/05 17:44:24  tfuruka1
 * Initial revision
 *
 */
#ifndef _AK2PR_H_
#define _AK2PR_H_

// 雑多な定義
#define MB_ERROR (MB_ICONSTOP | MB_SETFOREGROUND)

// 印刷データの種類
enum {PT_TEXT,                                  // 普通のテキスト
      PT_MAIL,                                  // メール(デコード済み)
      PT_PS_ACROBAT, // PostScript(Acrobatで処理する)
      PT_PS_GHOST, // PostScript(GhostScriptで処理する)
      NUM_OF_PT};

//
// 以下はプロトタイプ
//
/*--------------------------------------------------------------------
 * dwErr で指定されたエラーコードに対応するエラーメッセージを関数にシス
 * テムメッセージテーブルリソースから検索して一時的な文字列へのポイン
 * タを返却する。dwErr は GetLastError から得た値を指定する事。lpsz はエラー
 * メッセージへ追加する文字列を指定する。API 名等を指定する。
 * *-------------------------------------------------------------------*/
LPCSTR WINAPI
GetLastErrorMessage(LPCSTR lpsz, DWORD dwErr);
/*--------------------------------------------------------------------
 * プリントサーバが起動しているかチェックする。起動していた場合はTRUE
 * を返却する。未起動の場合は FALSEを返す。
 * *-------------------------------------------------------------------*/
BOOL WINAPI
IsPrtServerEnable(VOID);
/*--------------------------------------------------------------------
 * 作業ファイルを作成する。正常に作成出来た場合はファイルポインタを返
 * 却する。作成できなかった場合は NULL を返却する。mode は fopen の 
 * mode と全く同じである。また, ファイルを使用し終った後は fclose でファ
 * イルをクローズ後, lpszFileName で返却したファイルを削除しなければな
 * らない。
 * *-------------------------------------------------------------------*/
FILE * WINAPI
MakeTempFile(
    IN const char *mode,                        // モード
    OUT LPTSTR lpszFileName                     // 作成した作業ファイル名
    );
/*--------------------------------------------------------------------
 * 自分自身が格納されているディレクトリ名への一時的なポインタを得る。
 * 返却するポインタは一時的なものなので, 必要な場合は複写して使用する
 * 事。
 * *-------------------------------------------------------------------*/
LPCTSTR WINAPI
GetMyDir(VOID);
/*--------------------------------------------------------------------
 * UNIXのbasenameと同じ。フルパスからファイル名の部分への一時的なポイ
 * ンタを得る。返却するポインタは一時的なものなので, 必要な場合は複写
 * して使用する事。
 * *-------------------------------------------------------------------*/
LPCTSTR WINAPI
BaseName(LPCTSTR lpszFullPath);
LPCTSTR WINAPI
GetLongBaseName(LPCTSTR lpszFullPath);
/*-------------------------------------------------------------------- 
 * 指定されたファイルを一時ファイルへ複写し，プリントサーバへ印刷情報
 * を送信する。
 * *-------------------------------------------------------------------*/
BOOL WINAPI
SendPrintFromFileCopy(
    HWND hWnd,                                  // ハンドル
    LPCTSTR lpszTitle,                          // タイトル未指定時は"stdin"
    LPCTSTR lpszFileName,                       // コピー元ファイル名
    int nNumOfUp,                               // 段組数
    int nTab,                                   // タブ幅
    double fFontSize,                           // フォントサイズ
    int nType,                                  // 印刷データタイプ
    int nOrientation,                           // 用紙の向き
    short dmPaperSize                           // 用紙サイズ
    );
/*--------------------------------------------------------------------
 * 標準入力の内容を読み込みプリントサーバへ印刷情報を送信する。
 * *-------------------------------------------------------------------*/
BOOL WINAPI
SendPrintFromStdin(
    HWND hWnd,                                  // ハンドル
    LPCTSTR lpszTitle,                          // タイトル未指定時は"stdin"
    int nNumOfUp,                               // 段組数
    int nTab,                                   // タブ幅
    double fFontSize,                           // フォントサイズ
    int nType,                                  // 印刷データタイプ
    int nOrientation,                           // 用紙の向き
    short dmPaperSize                           // 用紙サイズ
    );
/*--------------------------------------------------------------------
 * lpstrで指定された書式文字列を書式に従って編集し表示ウィンドウへ表示
 * する。書式はprintfと同様である。表示ウィンドウが存在しない場合は，
 * hWndへ表示ウィンドウをCreateした後に表示する。nFlagはメッセージを識
 * 別する為のインジケータとして表示される。nFlagは 'N' を除く0x20〜
 * 0x7e迄の何れかのコードを指定出来る。戻り値は常に表示ウインドウのハ
 * ンドルである。但し，書式文字列に従って作成された文字列は16384文字以
 * 下でなければならない。nFlagは 'I', 'C', 'F', 'R', 'W', 'E', 'S', '
 * s', 'r' を認識します。それ以外は'I'として処理します。
 *
 * 注意: 表示ウインドウのコントロールIDは200を使用します。従ってオーナ
 * ウインドウではID=200のコントロールは使用できません(通常はIDは100か
 * ら使用されますので，ぶつかる可能性は少ない筈です)。ID=200の
 * WM_CTLCOLORLISTBOX, WM_DRAWITEM, WM_MEASUREITEM及び, WM_SIZEをフッ
 * クしますので，これらのイベントはオーナーウインドウへ通知されません。
 * *-------------------------------------------------------------------*/
HWND WINAPI
DbgPrint(
    HWND hWnd,                                  // ウインドウハンドル
    int nFlag,                                  // フラグ
    LPCSTR lpstr,                               // 書式printfと同じ
    ...                                         // 引数
    );
/*--------------------------------------------------------------------
 * lpStartからuLenバイトの16進ダンプを表示する。表示ウィンドウが存在し
 * ない場合は，hWndへ表示ウィンドウをCreateした後に表示する。lpszHead
 * はダンプの前に表示する文字列を指定する。nFlagの意味はDbgPrintを
 * 参照の事。
 * *-------------------------------------------------------------------*/
HWND WINAPI
DbgDump(
    HWND hWnd,                                  // ハンドル
    int nFlag,                                  // フラグ
    LPCSTR lpszHead,                            // タイトル
    LPBYTE lpStart,                             // 開始アドレス
    ULONG uLen                                  // ダンプ長
    );
/*--------------------------------------------------------------------
 * UNIXのSyslogの簡易版。常にdebug.local7しか出力しません。
 * *-------------------------------------------------------------------*/
VOID WINAPI
Syslog(
    LPCSTR lpstr,                               // 書式printfと同じ
    ...                                         // 引数
    );
/*--------------------------------------------------------------------
 * プリントサーバを起動する。正常に起動出来た場合は TRUE を返却する。起
 * 動できなかった場合は FALSE を返す。
 * *-------------------------------------------------------------------*/
BOOL WINAPI
ExecutePrtServer(VOID);
/*-------------------------------------------------------------------- 
 * 指定可能な用紙サイズの一覧を返却する。
 * 
 * *-------------------------------------------------------------------*/
LPTSTR WINAPI
GetPaperSizeUsageMessage();
/*-------------------------------------------------------------------- 
 * コマンドオプションで指定した用紙サイズから、DEVMODEで使用する用紙サ
 * イズの定数を得る。用紙サイズが不正の場合は0を返却する。
 * *-------------------------------------------------------------------*/
short WINAPI
GetPaperSizeDevMode(LPTSTR cmdOpt);

#endif //_AK2PR_H_
